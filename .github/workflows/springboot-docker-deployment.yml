name: Spring Boot CI/CD
on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Create application.properties
        run: |
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> question/src/main/resources/application.properties
          echo "spring.datasource.url=jdbc:mysql://${{ secrets.HONGSAMSTICK_DB_HOST }}:3306/${{ secrets.HONGSAMSTICK_DB_NAME }}" >> question/src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.HONGSAMSTICK_DB_USERNAME }}" >> question/src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.HONGSAMSTICK_DB_PASSWORD }}" >> question/src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> question/src/main/resources/application.properties
          echo "spring.mvc.hiddenmethod.filter.enabled=true" >> question/src/main/resources/application.properties
          echo "spring.mail.host=${{ secrets.HONGSAMSTICK_MAIL_HOST }}" >> question/src/main/resources/application.properties
          echo "spring.mail.port=${{ secrets.HONGSAMSTICK_MAIL_PORT }}" >> question/src/main/resources/application.properties
          echo "spring.mail.username=${{ secrets.HONGSAMSTICK_MAIL_USERNAME }}" >> question/src/main/resources/application.properties
          echo "spring.mail.password=${{ secrets.HONGSAMSTICK_MAIL_PASSWORD }}" >> question/src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.auth=true" >> question/src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.starttls.enable=true" >> question/src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.starttls.required=true" >> question/src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.ssl.trust=${{ secrets.HONGSAMSTICK_MAIL_HOST }}" >> question/src/main/resources/application.properties
          echo "spring.mail.properties.mail.smtp.ssl.enable=true" >> question/src/main/resources/application.properties
          echo "spring.mail.default-encoding=UTF-8" >> question/src/main/resources/application.properties
          echo "spring.data.redis.host=localhost" >> question/src/main/resources/application.properties
          echo "spring.data.redis.port=6379" >> question/src/main/resources/application.properties

      - name: Build with Gradle
        run: |
          cd question
          ./gradlew clean build --exclude-task test
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./question
          file: ./question/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/hongsamstick:springboot
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HONGSAMSTICK_EC2_HOST }}
          username: ${{ secrets.HONGSAMSTICK_EC2_USERNAME }}
          key: ${{ secrets.HONGSAMSTICK_EC2_KEY }}
          script: |
            docker stop myapp-8081 || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/hongsamstick:springboot
            docker run -d --rm --name myapp-8081 -p 8081:8080 ${{ secrets.DOCKER_USERNAME }}/hongsamstick:springboot  
            docker stop myapp-8082 || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/hongsamstick:springboot
            docker run -d --rm --name myapp-8082 -p 8082:8080 ${{ secrets.DOCKER_USERNAME }}/hongsamstick:springboot


